name: Windows
on: 
  push:
    branches: main
    tags:
      - 'X*'
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: Library/build
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64
  PYTHON_PATH: C:/hostedtoolcache/windows/Python/3.8.8/x64
  BASIC_PYTHON: 3.8
  HOME: D:/a/saltwatereos/saltwatereos
  AppInstaller: swEOS-Windows-Installer
jobs:
  buildApp:
    name: library
    runs-on: windows-latest
    strategy:
      matrix:
        python:
          - {version: '2.7', lib: 'python27.lib' }
          - {version: '3.5', lib: 'python35.lib' }
          - {version: '3.6', lib: 'python36.lib' }
          - {version: '3.7', lib: 'python37.lib' }
          - {version: '3.8', lib: 'python38.lib' }
          - {version: '3.9', lib: 'python39.lib' }
    steps:
      # checkout source code
      - uses: actions/checkout@v2

      # config msbuild
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1

      # install Qt5
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.0
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          dir: '${{ github.workspace }}/QT/'

      # install dependencies, e.g. VTK, swig
      - name: install dependencies
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          git clone https://github.com/zguoch/dependencies_swEOS.git
          cd dependencies_swEOS/windows
          unzip -qq swigwin-4.0.2.zip
          unzip -qq VTK8.2.zip

      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.version }}

      # get short SHA of commit 
      - name: Add SHORT_SHA env property with commit short sha
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: info 
        run: |
          cmake --version
          g++ --version
          echo ${{ github.ref }}
          echo "commit id short" ${SHORT_SHA}
          python --version
      # # debug workflow
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      # build swEOS library
      - name: build library
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          cd ${{env.HOME}}
          mkdir Library/build
          cd Library/build
          cmake -DSWIG_EXECUTABLE=${{env.HOME}}/dependencies_swEOS/windows/swigwin-4.0.2/swig.exe -DPYTHON_INCLUDE_DIR=${{env.pythonLocation}}\include -DPYTHON_LIBRARY=${{env.pythonLocation}}\libs\${{matrix.python.lib}} -DBuild_API_tcl=OFF -DCMAKE_BUILD_TYPE=${{env.BUILD_CONFIGURATION}} -DCMAKE_GENERATOR_PLATFORM=${{env.BUILD_PLATFORM}} ..
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} eosH2ONaCl.vcxproj
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} INSTALL.vcxproj
          cd ${{env.HOME}}
          cp -r Library/API/python/pyswEOS pyswEOS_python${{ matrix.python.version }}
          7z a -tzip pyswEOS_python${{ matrix.python.version }}.zip pyswEOS_python${{ matrix.python.version }}
      # upload python API
      - name: upload pyswEOS
        uses: actions/upload-artifact@v2
        with:
          name: pyswEOS_python${{ matrix.python.version }}_${{env.SHORT_SHA}}
          path: |
            pyswEOS_python${{ matrix.python.version }}.zip
      # build swEOS cmd app
      - name: build cmd app
        if: ${{ matrix.python.version == env.BASIC_PYTHON }}
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          cd ${{env.HOME}}
          mkdir commandline\build
          cd commandline\build
          cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_CONFIGURATION}} -DCMAKE_GENERATOR_PLATFORM=${{env.BUILD_PLATFORM}} ..
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} SaltWaterEOS.sln
      
      # build desktop app
      - name: build desktop app
        if: ${{ matrix.python.version == env.BASIC_PYTHON }}
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          cd ${{env.HOME}}
          mkdir desktop/build
          cd desktop/build
          cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_CONFIGURATION}} -DCMAKE_GENERATOR_PLATFORM=${{env.BUILD_PLATFORM}} -DVTK_DIR=${{env.HOME}}/dependencies_swEOS/windows/VTK8.2/lib/cmake/vtk-8.2 -DCMAKE_INSTALL_PREFIX=${{env.HOME}}/install ..
          # -DCPACK_GENERATOR=ON 
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} swEOS.vcxproj
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} INSTALL.vcxproj
          ../../QT/Qt/5.15.2/msvc2019_64/bin/windeployqt.exe ${{env.BUILD_CONFIGURATION}}/swEOS.exe
          # cp ${{env.HOME}}/dependencies_swEOS/windows/VTK8.2/bin/*.dll Release
          # mkdir ${{env.HOME}}/install/CommandLineTool
          # cp ../../commandline/build/Release/swEOS.exe ${{env.HOME}}/install/CommandLineTool
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} PACKAGE.vcxproj

      # package
      - name: package zip format
        if: ${{ matrix.python.version == env.BASIC_PYTHON }}
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          cd ${{env.HOME}}/desktop/build
          # mkdir swEOS_windows
          # cp -r Library/lib swEOS_windows/
          # cp -r Library/API swEOS_windows/
          # cp -r Library/include swEOS_windows/
          # cp commandline\build\Release\*.exe swEOS_windows\swEOS_cmd.exe
          # cp -r desktop\build\Release swEOS_windows\
          7z a -tzip swEOS-Windows-Installer.zip ${{env.HOME}}/install/*

      - name: upload app
        if: ${{ matrix.python.version == env.BASIC_PYTHON }}
        uses: actions/upload-artifact@v2
        with:
          name: swEOS_windows_python${{matrix.python.version}}_${{env.SHORT_SHA}}
          path: |
            ${{env.HOME}}/desktop/build/${{env.AppInstaller}}.exe
            ${{env.HOME}}/desktop/build/${{env.AppInstaller}}.zip
    
      # tag 上传Release
      - name: get tag name
        if: startsWith(github.event.ref, 'refs/tags/')
        run: |
          echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "GIT_TAG=$(git describe --tags --abbrev=0)"
      - name: upload exe install
        if: startsWith(github.event.ref, 'refs/tags/') && matrix.python.version == env.BASIC_PYTHON 
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{env.HOME}}/desktop/build/${{env.AppInstaller}}.exe
          asset_name: ${{env.HOME}}/desktop/build/${{env.AppInstaller}}.exe
          tag: ${{ github.ref }}
          overwrite: true
      - name: upload zip installer
        if: startsWith(github.event.ref, 'refs/tags/') && matrix.python.version == env.BASIC_PYTHON
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{env.HOME}}/desktop/build/${{env.AppInstaller}}.zip
          asset_name: ${{env.AppInstaller}}.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: upload pyswEOS
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: pyswEOS_python${{ matrix.python.version }}.zip
          asset_name: pyswEOS_windows_python${{ matrix.python.version }}.zip
          tag: ${{ github.ref }}
          overwrite: true