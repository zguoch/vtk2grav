name: Ubuntu
on: 
  push:
    branches: master
    tags:
      - 'V*'
env:
  HOME: /home/runner/work/vtk2grav/vtk2grav
jobs:
  buildApp:
    name: library
    # ubuntu-latest (ubuntu-20.04: glibc 2.31), ubuntu-18.04 (glibc 2.27), ubuntu-16.04 (glibc 2.23)
    runs-on: ubuntu-18.04
    env:
      AppInstaller: vtk2grav-Linux-Installer
      Path_Pythons: /opt/hostedtoolcache/Python
    steps:
      # checkout source code
      - uses: actions/checkout@v2
      
      # install dependencies, e.g. VTK, swig
      - name: install dependencies
        run: |
          git clone https://github.com/zguoch/dependencies_swEOS.git
          cd dependencies_swEOS/ubuntu
          unzip -qq VTK8.2.zip
      
      # get short SHA of commit 
      - name: Add SHORT_SHA env property with commit short sha
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: info 
        run: |
          cmake --version
          g++ --version
          echo ${{ github.ref }}
          echo "commit id short" ${SHORT_SHA}
          echo "github tag: " ${GIT_TAG}
          python --version
          ldd --version
      # # debug workflow
      # - name: install oh my zsh
      #   run: |
      #     sudo apt-get install zsh
      #     sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      
      # build vtk2grav 
      - name: build vtk2grav
        run: |
          mkdir build
          cd build
          cmake -DVTK_DIR=${{env.HOME}}/dependencies_swEOS/ubuntu/VTK8.2/lib/cmake/vtk-8.2 -DCMAKE_INSTALL_PREFIX=./install ..
          make 
          make install
          
      # package
      - name: package
        run: |
          cd ${{env.HOME}}/build
          zip -r ${{env.AppInstaller}}.zip install

      # upload artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: swEOS_ubuntu_${{env.SHORT_SHA}}
          path: build/${{env.AppInstaller}}.zip

     
      # tag 上传Release
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/${{env.AppInstaller}}.zip
          asset_name: ${{env.AppInstaller}}.zip
          tag: ${{ github.ref }}
          overwrite: true